---
layout: post
title: Fixed positions with JavaScript
summary: A robust solution for when a fixed CSS position just isn’t enough
---

Fixed elements (sidebars in particular) are "becoming":http://help.bigcartel.com/articles/22-javascript-ajax "popular":http://store.apple.com/us/configure/MC723LL/A?mco=MjEyOTY4OTQ. You know those sidebars that wait until the top of window hits them, and they magically stick?

In simple situations (this site for example) CSS will do the trick. But what if dynamic content at the top of your page changes this calculation (a flash or notification message for example)? Or your header likes to change size?

"Ozan":http://ozanonay.com helped me solve this problem, and I thought I'd share. 

We’ll start by selecting said element, calling our custom function, and specifying how far from the top of the page we want it to live (before scrolling).

{% highlight js %}
var topBoundary = 20;
$('#fixed').myFixture({ topBoundary: topBoundary });
{% endhighlight %}

And our function looks something like this:

{% highlight js %}
$.fn.myFixture = function (settings) {
  return this.each(function () {
    
    var elem = $(this).css('position', 'fixed');
    
    var setPosition = function () {         
      // get no of pixels hidden above the the window     
      var scrollTop = $(window).scrollTop();       
      // set the default position
      var top = settings.top || 0      
        // The difference between the default position and how far we have scrolled
        , topBuffer = settings.topBoundary - scrollTop;      
      // update position if required
      if (topBuffer > 0) { top += topBuffer }
      // Set the position!
      elem.css('top', top);
    };
        
    $(window).bind('scroll', setPosition);
    setPosition();
  });
};
{% endhighlight %}

Let’s revisit our first block of code, and base the calculation on the height of a div above it (a header for example):

{% highlight js %}
var headerHeight = $('header');
topBoundary = headerHeight.outerHeight();
$('#fixed').myFixture({ topBoundary: topBoundary });
{% endhighlight %}

Let's also check if any notifications exist, and account for that:

{% highlight js %}
var notifications = $('#notifications')
  , headerHeight = $('header')
  , topBoundary;
if (notifications.length > 0) {
  topBoundary = notifications.outerHeight() + headerHeight;
} else {
  topBoundary = headerHeight;
}
$('#fixed').myFixture({ topBoundary: topBoundary });
{% endhighlight %}